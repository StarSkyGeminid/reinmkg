%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Sep 30 18:14:53 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 38 115 339 308
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 38 115 339 308
%%EndPageSetup
q 38 115 301 193 rectclip
1 0 0 -1 0 384 cm q
q
192 192 m 192.02 205.238 188.602 218.25 182.074 229.766 c 179.453 234.43
 176.344 238.797 172.801 242.805 c 172.688 242.945 172.566 243.082 172.434
 243.207 c 147.758 270.758 106.934 276.777 75.355 257.52 c 43.777 238.262
 30.441 199.207 43.645 164.656 c 56.844 130.105 92.824 109.895 129.199 116.602
 c 165.574 123.305 191.984 155.012 192 192 c h
192 192 m W n
[1.92 0 0 1.92 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.513726 0.545098 0.772549 ]
      /C1 [ 0.729412 0.607843 0.788235 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.729412 0.607843 0.788235 ]
      /C1 [ 0.945098 0.352941 0.141176 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.945098 0.352941 0.141176 ]
      /C1 [ 0 0 0 ]
      /N 1
   >>
   ]
   /Bounds [ 1 1 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 39.990002 134.669998 80 65.379997 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
261.965 121.977 m 231.23 108.148 195.066 115.973 172.801 141.273 c 160.523
 127.301 143.574 118.277 125.125 115.891 c 139.348 90.703 166.516 75.645
 195.414 76.93 c 224.312 78.215 250.035 95.629 261.965 121.977 c h
261.965 121.977 m W n
[1.92 0 0 1.92 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.513726 0.545098 0.772549 ]
      /C1 [ 0.729412 0.607843 0.788235 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.729412 0.607843 0.788235 ]
      /C1 [ 0.945098 0.352941 0.141176 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.945098 0.352941 0.141176 ]
      /C1 [ 0 0 0 ]
      /N 1
   >>
   ]
   /Bounds [ 1 1 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 92.580002 76.190002 112.769997 41.209999 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
338.898 230.398 m 338.898 251.609 321.707 268.801 300.5 268.801 c 115.199
 268.801 l 137.074 268.832 157.918 259.496 172.453 243.148 c 173.184 243.148
 l 172.82 242.746 l 176.352 238.758 179.457 234.406 182.074 229.766 c 198.125
 201.301 194.402 165.793 172.801 141.273 c 193.918 117.328 227.648 108.945
 257.52 120.219 c 287.391 131.492 307.172 160.074 307.199 192 c 307.199 
192.652 l 325.512 195.898 338.867 211.801 338.898 230.398 c h
338.898 230.398 m W n
[1.92 0 0 1.92 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.513726 0.545098 0.772549 ]
      /C1 [ 0.729412 0.607843 0.788235 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.729412 0.607843 0.788235 ]
      /C1 [ 0.945098 0.352941 0.141176 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.945098 0.352941 0.141176 ]
      /C1 [ 0 0 0 ]
      /N 1
   >>
   ]
   /Bounds [ 1 1 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 97.379997 161.610001 149.720001 70.970001 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
