%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Sep 30 18:14:48 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 131 384 253
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 131 384 253
%%EndPageSetup
q 0 131 384 122 rectclip
1 0 0 -1 0 384 cm q
q
22.836 252.953 m 10.223 252.953 0 242.719 0 230.094 c 0 217.473 10.223 
207.238 22.836 207.238 c 35.523 207.238 l 35.523 183.859 54.457 164.91 77.816
 164.91 c 83.43 164.91 88.785 166.004 93.688 167.992 c 100.305 146.594 120.234
 131.047 143.789 131.047 c 162.387 131.047 178.723 140.734 188.031 155.344
 c 195.875 150.668 205.043 147.98 214.836 147.98 c 232.785 147.98 248.629
 157.004 258.082 170.766 c 262.539 169.168 267.344 168.297 272.352 168.297
 c 288.867 168.297 303.168 177.77 310.133 191.582 c 313.758 189.688 317.883
 188.613 322.254 188.613 c 334.09 188.613 344.094 196.461 347.355 207.238
 c 361.164 207.238 l 373.777 207.238 384 217.473 384 230.094 c 384 242.719
 373.777 252.953 361.164 252.953 c h
22.836 252.953 m W* n
[3.047619 0 0 3.047619 -1078.857143 45.714286] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.513726 0.545098 0.772549 ]
      /C1 [ 0.729412 0.607843 0.788235 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.729412 0.607843 0.788235 ]
      /C1 [ 0.945098 0.352941 0.141176 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.945098 0.352941 0.141176 ]
      /C1 [ 0 0 0 ]
      /N 1
   >>
   ]
   /Bounds [ 1 1 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 354 50.0156 480 46.777601 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
